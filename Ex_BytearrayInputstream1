import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

public class Ex_Bytearrayinputstream {
	public static void main(String[] args) throws IOException {
		//FileOutputStream ->파일생성
		//ByteArrayInputStream ->데이터 읽어들임
		//-> 앞에 byte인데 file쓰는건 상관없고
		//-> 뒤에 InputStream이면 InputStream 써야 되어서 단위만 맞춰주면 된다.
		
		//2. 파일생성해서 초기화한 배열을 저장한다.
		//1. 배열을 초기화해서
		
		ByteArrayInputStream in=null;
		FileOutputStream out=null;
		
		try {
			byte[] b= new byte[] {1,2,3};	//byte는 정수타입
			//1,2,3은 아스키코드값이 없기 때문에 출력이 쓰레기값 처럼 뜨지만 사실은 sysout해보면 잘나온다.
			in=new ByteArrayInputStream(b);
			out=new FileOutputStream("g_1201.dat");	//dat 파일임
			
			int r=-1;
			while((r=in.read())!=-1) {
				out.write(r);
			}
		}
		catch(Exception e) { 
			out.close();
			in.close();
		}		
		
		//g_1201.dat 파일을 읽어와서
		//바이트 배열에 저장하겠다.
		FileInputStream in2=null;
		ByteArrayOutputStream out2=null;
		
		try {
			in2=new FileInputStream("g_1201.dat");
			//g_1201.dat 파일을 읽어와서
			out2=new ByteArrayOutputStream();
			//바이트 배열에 저장하겠다.
			//[]
			
			int r=-1;
			while((r=in2.read())!=-1) {
				out2.write(r);	//배열에 저장함 1,2,3
			}
			
	
			byte []b=out2.toByteArray();	//1,2,3을 바이트 배열을 새로 생성해서 저장함
			//->byte[]b={1,2,3};과 같은 뜻이다.
			
			//파일에서 바이트 배열에 저장한 값을 for문으로 읽어옴
			for(int i=0; i<b.length; i++) {
				System.out.println(b[i]);
			}
		}
		catch(Exception e) {
			out2.close();
			in2.close();
		}
	}
}
