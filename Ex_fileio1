import java.io.FileReader;
import java.io.IOException;

public class Ex_fileIO1 {
	public static void main(String[] args) throws IOException {
		/*
		//파일 입출력
		//커리) 조건문, 반복문 -> 배열 -> 함수 ->  파일 입출력
		
		//자바 입출력과 스트림
		//Scanner->stream, reader, buffer, ..
		
		//바이트 스트림
		//1) 입력 스트림 -> ~~InputStream으로 끝남
		//2) 출력 스트림 -> ~~OutputStream으로 끝남
		// 문자 스트림
		//1) 입력 스트림 -> ~~Reader로 끝남
		//2) 출력 스트림 -> ~~Writer로 끝남
		
		//메모장에 메모하기
		//1. 파일 생성(출력) - 1130.txt
		//ex)outputStream이나 Writer로 써줘야 한다.
		//Writer(문자단위 파일생성)
		//OutputStream(바이트단위 파일생성)
		
		//주인공 장식
		//->Constructors 의 매개변수를 보고
		//매개변수안에 InputStream, OutputStream, Reader, Writer가 보이면 장식
		//없으면 주인공!(File~로 시작하는 메소드는 거의 다 기반스트림이다.)
		//ex)
		//BufferedOutputStream(OutputStream out)->장식(보조)
		//FileReader(String fileName) -> 주인공(기반)
		
		//2. 파일에다 값 저장
		//write 메소드
		
		//3.파일 읽어들임
		//Reader(문자단위로 읽어들임)
		//InputStream(바이트단위로 읽어들임)
		
		//4. 파일닫기(close())
		
		char a='S';
		char b='W';
		
		FileWriter out = new FileWriter("a_1130.txt");	//SW
		//프로젝트 refresh해주면 a.txt가 생긴것을 볼 수 있다.
		//문자단위로 파일생성(주인공=기반스트림)
		out.write(a);
		out.write(b);
		out.close();//꼭 적어야 됨!
		
		
		//예외 처리 방법 2가지
		//1. try~catch
		//2. throws 예외 던지기 
		 */
		
		char []ary= new char[10];
		int r;
		FileReader in=new FileReader("a.txt");
		//파일에 저장한 문자를 읽어들여서
		r=in.read(ary,0,ary.length);
		//배열의 길이만을 저장
		
		for(int i=0; i<r; i++) {
			System.out.println(ary[i]);
		}
		in.close();	

		//파일 입출력 부분에서 예외처리를 해주어야 한다.
		
	}
}
