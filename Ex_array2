import java.util.Scanner;

public class Ex_array2 {
	public static void main(String[] args) {
		/*
		 //배열 (중요★)
		 
		//1. 대량 작업을 한꺼번에 처리할 때 사용한다.
		//2. 한번에 많은 메모리 공간 선언 가능
		//3. 인덱스와 인덱스에 대응하는 데이터들로 이루어진 자료구조
		//인덱스
		//1. 순차적으로 저장되는 공간(배열의 위치값)->같은 타입의 데이터들만.
		//2. 배열의 시작위치에서붙어 데이터가 있는 상대 위치
		
		//int intArray[]; //-> [] : 대괄호를 인덱스라고 부른다 -> 배열 선언하는 기능을 한다.
		//int intArray[]=new int[10];	//배열의 선언과 생성을 동시에 해준다
		
		//배열의 선언과 생성
		int ary[]=new int[30];
		//배열 선언 =배열 생성(선언 후 생성)
		//ary라는 배열에 정수 30개를 넣을 공간을 생성하겠다.
		
		//타입
		//-기본타입(8개)
		//-레퍼런스(3개) : 클래스, 인터페이스, 배열
		
		//int intArray[]; -> 레퍼런스=>참조라는 뜻 ->배열 선언하면 주소값이 생긴다
		//intArray = new int[5]; -> 선언한 주소값을 기준으로 배열이 5개 생성된다. 인덱스 0부터 시작
		//=>생성한 배열을 중심으로 주소값이 생성이 된다. = 배열의 길이에 따라 주소값의 개수만큼 메모리를 할당받는다
		
		
		//1. 정수 5개를 저장할 배열
		//(배열명은 마음대로)
		//int a[] = new int[5];

		//2. 실수 10개를 저장할 배열
		//double []a = new double[10];

		//3. 배열 요소 수가 세개인 int형 배열
		//int a[] = new int[3];

		//4. 인덱스의 최대값이 4인 char형 배열
		//[0][1][2][3][4]
		//char a[] = new char[5];
		
		
		//배열을 초기화하면서 생성한 결과
		//int intArray[]={4,3,2,1,0}; -> new연산자를 이용하여 따로 생성을 하지 않아도 된다
		
		//1. int ary[]=new int[5];	//20byte->배열의 용량 설정한것
		//2. int ary2[]= {4,2,4};	//12byte-> length필드 사용해서 출력하면 3출력됨
		//3. int ary3[]= new int[] {4,6,3};//12byte->배열 초기화를 동시에 할때에는 요소 개수(인덱스)는 적지 않는다.
		
		int ary[]=new int[5];	//0~4까지있음(인덱스범위)
		ary[0]=1;
		ary[1]=2;
		ary[4]=5;
		ary[5]=6;	//error->인덱스 범위 벗어남
		
		
		//아파트 배열 문제
		//아파트 각 층에 있는 인원수를 입력하고 총합을 구하라
		
		Scanner s= new Scanner(System.in);
		int arr[]=new int[7];
		int sum=0;
		
		for(int i=0; i<arr.length; i++) {
			arr[i]=s.nextInt();
			sum+=arr[i];
		}
		System.out.println(sum+"명");
	
		
		//피보나치 수열 문제 -> 인접한 수를 더한다
		//1 2 3 5 8 13 21 34 55 89(피보나치)
		//[0]	...				[9]
		//ary[2]=ary[0]+ary[1];
		//ary[3]=ary[1]+ary[2];
		//ary[4]=ary[2]+ary[3]..
						
		int ary[]=new int[10];
		ary[0]=1;
		ary[1]=2;
		for(int i=0; i<ary.length-2; i++) {
			ary[i+2]=ary[i]+ary[i+1];
		}

		for(int i=0; i<ary.length; i++) {
			System.out.print(ary[i]+" ");
		}
		
		
		

		//4개의 정수값 입력받아 총합과 총곱출력
		//1*x=x
		//1*10=10...
		
		Scanner s=new Scanner(System.in);
		int sum=0;		//총합변수(누적시킨다)
		int multi=1;	//총곱변수
		
		int ary[]=new int[4];
		for(int i=0; i<4; i++) {
			ary[i]=s.nextInt();
			sum+=ary[i];	//누적합
			multi*=ary[i];	//누적곱
		}
		System.out.println(sum);
		System.out.println(multi);
		
		
		//배열을 1,2,3,4,5로 초기화
		int ary[]= new int[] {44,67,78};	//개수 5개에 대한 인덱스가 생성된다.
		//int ary[]= {1,2,3,4,5};
		System.out.println("배열의 크기: "+ary.length);
		//초기화한 값 다 출력해라
		for(int i=0; i<ary.length; i++) {
			System.out.println("ary["+i+"]: "+ary[i]);
		}

		//2차원 배열 - 인덱스가 2개(행, 열) -> for문 중첩이랑 같이 쓰임
		//int intArray[][];	//int[][] intArray;와 같다
		//int ary[][]= new int[2][3];
		//[0][0] [0][1] [0][2]
		//[1][0] [1][1] [1][2]
		
		int ary2[][]= {{3,4,5},
					   {5,6,8}};
//		System.out.println(ary2[0][0]); //3
//		System.out.println(ary2[0][1]);	//4
//		System.out.println(ary2[0][2]);	//5
		
//		System.out.println(ary2[1][0]);	//5
//		System.out.println(ary2[1][1]);	//6
//		System.out.println(ary2[1][2]);	//8
	
		
		//바깥 for문을 기준으로 안쪽 for문이 돈다(반복된다)
		//(행)				(열)
		for(int i=0; i<ary2.length; i++) {
			for(int j=0; j<ary2[i].length; j++) {
				System.out.println(ary2[i][j]);
			}
		}
		
		//하나의 문자 5행 5열 구조	->a
		//실수형 5행 2열 구조		->b
		String a[][]={{"a","a","a","a","a"},{"a","a","a","a","a"},{"a","a","a","a","a"},{"a","a","a","a","a"},{"a","a","a","a","a"}};		
		double b[][]= {{1,1},{2,2},{3,3},{4,4},{5,5}};
		
		char a[][]=new char[5][5];
		double b[][]=new double[5][2];
		
		int c[][]= {{1,2,3},{4,5,6}};	//2행 3열
		
		
		//c에 있는 값 다 출력
		
		 //c[0][0]=1
		 //c[0][1]=2
		 //c[0][2]=3
		 //c[1][0]=4
		 //c[1][1]=5
		 //c[1][2]=6
		 
		for(int i=0; i<2; i++) {
			for(int j=0; j<3; j++) {
				System.out.println(c[i][j]);
			}
		}
		
		
		
		//실수형 2차원 배열 2행3열을 생성해
		//실수값을 입력해서 입력한 값을 다 출력해라.
		
		Scanner s=new Scanner(System.in);
		
		double a[][]=new double[2][3];
		for(int i=0; i<2; i++) {
			for(int j=0; j<3; j++) {
				a[i][j]=s.nextDouble();
				System.out.println(a[i][j]);
			}
		}
		
		int ary[][]= {{1,2,3,4},{5,6,7,8}};
		//2행 4열
		
		int ary1[][]=new int[4][2];
		//4행 2열
		
		//ary의 데이터를 ary1에 복사(위치는 다름)
		//1  2  3  4		->  1  5
		//5  6  7  8            2  6
		//						3  7
		//						4  8
		//   ary[2][4]         ary1[4][2]
		for(int i=0; i<2; i++) {
			for(int j=0; j<4; j++) {
				ary1[j][i]=ary[i][j];
			}
		}
		//4행2열 ary1에 저장되어있는 데이터 다 출력
		for(int i=0; i<4; i++) {
			for(int j=0; j<2; j++) {
				System.out.print(ary1[i][j]+" ");
			}
			System.out.println();
		}
		
	

		Scanner s=new Scanner(System.in);
		int a[][]=new int[2][3];
		int sum=0;
		
		for(int i=0; i<2; i++) {
			for(int j=0; j<3; j++) {
				a[i][j]=s.nextInt();
				sum+=a[i][j];
			}
		}
		System.out.println(sum);
		//2행3열에 정수를 입력해 입력한 정수 총합출력
		
		
		//비정방형 배열의 length	
		//비정방형 -> 열의 개수가 정해져있지 않을때를 말한다
		//i.length -> 2차원 배열의 행의 개수
		//i[n].length -> n번쨰 행의 열의 개수
		String s[][]= {{"java"}, 
				       {"c","c++"},
				       {"html","css","python"}};
		
		for(int i=0; i<s.length; i++) {
			for(int j=0; j<s[i].length; j++) {
				System.out.println(s[i][j]);
			}
		}
		
		//2차원 배열일때
		//행 ->배열명.length;
		//열 ->배열명[행].length;
		
		 */
	}
}
