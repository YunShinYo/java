import java.util.Scanner;

public class Ex_array1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//배열(array) -> 레퍼런스 타입
		//배열은 같은 타입의 데이터들이 순차적으로 저장되는 공간
		//반복문을 이용하여 처리하기에 적합한 자료 구조(for)
		//int i[]=new int[10]; //이 배열의 크기는 40byte

		/*
		//1. 정수 5개를 저장할 배열
		//(배열명은 마음대로)
		//int a[];
		//a=new int[5];
		int a[]=new int[5];

		//2. 실수 10개를 저장할 배열
		double a[]=new double[10];

		//3. 배열 요소 수가 세개인 int형 배열
		int a[]=new int[3];

		//4. 인덱스의 최대값이 4인 char형 배열 //->0,1,2,3,4
		char a[]=new char[5];


		//정수 5개 저장할 수 있는 배열 생성
		//int ary[]=new int[5];

		//1번 초기화 방법
		int ary[]= {4,7,89,3,2}; //요소 개수는 5개, 인덱스는 4
		//생성과 동시에 초기화한것임
		  for(int i=0; i<ary.length; i++) {
		  System.out.println(ary[i]); 
		  }

		  //2번 초기화 방법(잘 안쓴다)
		  int a[]=new int[] {4,7,89,3,2};
		  for(int i=0; i<ary.length; i++) {
		  System.out.println(a[i]); 
		  }
		 
		 
		  //생성된 하나의 배열을 다수의 레퍼런스가 참조 가능하다
		  int intArray[]=new int[5];
		  int myArray[]=intArray; //=new int[5];와 같은 뜻이 된다
		 
		  intArray[1]=2;
		  myArray[1]=6; //index가 1인 메모리에서 값이 2가 지워지고 6이 입력된다..

		 


		  //배열 원소 접근
		  //반드시 배열 생성 후 접근
		  int intArray[];
		  intArray[4]=8; //오류, intArray 배열의 메모리가 할당되지 않았음
		

		int[] intArray;
		intArray = new int[10];

		intArray[3]=6; //배열에 값을 저장
		int n=intArray[3]; //배열로부터 값을 읽음

		 


		//배열의 크기와 인덱스
		//인덱스는 정수 타입만 가능 
		int n = intArray[-2];  //->실행오류-2는 인덱스로 적합하지 않음


		int ary[]=new int[] {4,2,3,1,2};
		System.out.println(ary[4]);

		 


		Scanner s= new Scanner(System.in);
		//실수 3개 배열 생성
		double ary[]=new double[3]; //24byte가 생성됨
		//3개 실수를 저장할 수 있는 배열 선언 및 배열 생성

		for(int i=0; i<ary.length; i++) {	//ary.length=3이라는 뜻이다
		ary[i]=s.nextDouble(); //실수를 3번 입력함
		System.out.println(ary[i]);
		}
		
		//5개 실수 입력할 배열을 생성하여
		//5개 실수를 입력해 총합을 출력해라.
		Scanner s=new Scanner(System.in);
		double sum=0;
		double ary[]=new double[5];
		for(int i=0; i<ary.length; i++) {
		ary[i]=s.nextDouble();
		sum+=ary[i];
		}
		System.out.println("입력한 수의 평균"+sum/5);
		s.close();


		//배열의 크기
		//배열명.length
		int intArray[]=new int[3];
		int size=intArray.length; //3
		System.out.println(size);


		 


		//최대값 구하기
		Scanner s=new Scanner(System.in);

		int ary[]=new int[5]; //20byte가 생성됨
		int max=0;
		//|2 |1 |4 |1 |8 |  //20byte
	 //ary[0][1][2][3][4]  
		//max=0;
		
		for(int i=0; i<ary.length; i++) {//5->ary.length와 같다
			ary[i]=s.nextInt(); //정수입력받아 배열에 저장
			if(max<ary[i]) {
				max=ary[i];
			}
		}
		System.out.println("가장 큰 수는 "+max);
		*/
		
	}

}
