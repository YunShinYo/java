import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Scanner;
/*
class Person implements Serializable {//★
	private String a, b;
	private int c, d;

	Person(String a, String b, int c, int d) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
	}

	void show() {
		System.out.println(a + "," + b + "," + c + "," + d);
	}
}
class Circle{
	private double x,y;
	private int r;
	Circle(double x, double y, int r){
		this.x=x;
		this.y=y;
		this.r=r;
	}
	void show(){
		System.out.println(x + " " +y + " " +r);
		}
	}

public class test_1209_3 {

	public static void main(String[] args) {

		//3. Main()를 보고 main()에 Object In, OutputStream을 만들고, 클래스도 따로 구현해라.
		//Person p=new Person("Jack", "computer", 20, 123); 
		//p.show(); //데이터 다 출력하는 함수
		// Main()을 보고 main()에 Object In, OutputStream을 만들고,
				// 클래스도 따로 구현해라.
				Person p = new Person("Jack", "computer", 20, 123);

				try {
					System.out.println("직렬화");
					ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("p.dat"));
					out.writeObject(p);
					p.show();
					out.close();
				 } 
				catch (FileNotFoundException e) {} 
				catch (IOException e) {}
					try {
						System.out.println("역직렬화");
						ObjectInputStream in = new ObjectInputStream(new FileInputStream("p.dat"));	
						Person newp = (Person) in.readObject();
						newp.show();
						in.close();
					}
				catch (ClassNotFoundException e) {}
				catch (FileNotFoundException e) {} 
				catch (IOException e) {}

		
		//4. 3개의 Circle 객체 배열을 만들고 x, y, r값을 읽어 3개의 Circle객체를 만들어 show()함수에서 다 출력해라. 
		//class Circle{
		//private double x,y;
		//private int r;
		//Circle(double x, double y, int r){
		//this.x=x; this.y=y; this.r=r; }
		//void show(){
		//System.out.println(x + “ “ +y + “ “ +r);}}

		Circle c[]=new Circle[3];
		Scanner s=new Scanner(System.in);
		
		for(int i=0; i<c.length; i++) {
			double d1=s.nextDouble();
			double d2=s.nextDouble();
			int d3=s.nextInt();
			c[i]=new Circle(d1,d2,d3);	//객체를 생성해서 배열에 저장한다.
		}
		for(int i=0; i<c.length; i++) {
			c[i].show();
		}
		s.close();
		//실행결과) x,y,r : 1.0 1.0 4
		//x,y,r : 2.5 3.5 6
		//x,y,r : 4.2 1.2 4

	}

}
*/
